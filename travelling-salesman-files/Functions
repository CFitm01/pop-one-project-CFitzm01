import math

file = open("city-data.txt", "r")
text_file = file.read()
text_file = text_file.replace("\n", "\t")
#print(text_file)
road_map = list()
city_coord = {}
total_distance = 0


def read_cities(text_file):
    locations = text_file.split("\t")
    for i in range(0, len(locations), 4):
        road_map.append(tuple(locations[i:i+4]))
    return road_map

def print_cities(road_map):
    #To print out all of the cities and their coordinates to 2dp.
    for i in range(0, len(road_map)):
        cit_lat = round(float(road_map[i][2]),2)
        cit_lon = round(float(road_map[i][3]),2)
        #Adds these cities to dictionary. State is irrelevant.
        city_coord[road_map[i][1]] = [cit_lat, cit_lon]
        print(str(road_map[i][1]) + " " + str(cit_lat) + " " + str(cit_lon))
        #Works. Consider saving these so that they might be used for later.
        #Consider Dictionary

def compute_total_distance(road_map):
    distance = 0
    for i in range(0, len(road_map)):
        x1 = float(road_map[i][2])
        y1 = float(road_map[i][3])
        if i <= 50:
            x2 = float(road_map[i+1][2])
            y2 = float(road_map[i+1][3])
            distance += abs(math.sqrt((x1-x2)) + sqrt((y1-y2)))
        else:
            x1 = float(road_map[-1][2])
            y1 = float(road_map[-1][3])
            x2 = float(road_map[0][2])
            y2 = float(road_map[0][3])
            distance += abs(math.sqrt((x1-x2)) + sqrt((y1-y2)))
    total_distance = distance
    #getting a math domain error in this
