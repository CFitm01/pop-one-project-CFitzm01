def compute_total_distance(roadmap):
        n = len(roadmap)
        current_distance = 0
#        current_route = roadmap
        end_start = math.sqrt((roadmap[-1][2]-roadmap[0][2])**2 +\
        (roadmap[-1][3]-roadmap[0][3])**2)
        for i in range(len(roadmap)):
            x1 = float(roadmap[i][2])
            y1 = float(roadmap[i][3])
            #This if-statement prevents us from reaching an 'index out of range
            #error, and allows the journey to continue to the finale.
            if i < (n-1):
                x2 = float(roadmap[i+1][2])
                y2 = float(roadmap[i+1][3])
                ans = math.sqrt((x1 - x2)**2 + (y1 - y2)**2)
                current_distance += round(ans,2)
            elif i+1 > (n-1):
               current_distance += round(end_start,2)
        #This removes the need to place an arbitrary value of distance for the
        #route, otherwise the best route would always remain '0'
        return round(current_distance,2)
#        if current_distance < self.best_distance or self.best_distance == 0:
#            self.best_distance = current_distance
#            self.best_route = current_route
#        return print("The current route is: " + str(current_distance)+ "\n" + \
#                     "The best route is: " + str(self.best_distance))
